// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview AI-powered tool to semantically match placeholders in Word templates with data source columns. Uses Sentence-Transformers (SBERT) to suggest mappings.
 *
 * - suggestPlaceholderMappings - A function that handles the placeholder mapping process.
 * - SuggestPlaceholderMappingsInput - The input type for the suggestPlaceholderMappings function.
 * - SuggestPlaceholderMappingsOutput - The return type for the suggestPlaceholderMappings function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestPlaceholderMappingsInputSchema = z.object({
  templatePlaceholders: z
    .array(z.string())
    .describe('An array of placeholders extracted from the document template.'),
  dataSourceColumns: z
    .array(z.string())
    .describe('An array of column names from the data source.'),
});
export type SuggestPlaceholderMappingsInput = z.infer<
  typeof SuggestPlaceholderMappingsInputSchema
>;

const SuggestPlaceholderMappingsOutputSchema = z.array(
  z.object({
    placeholder: z.string().describe('The placeholder from the template.'),
    suggestedColumn: z
      .string()
      .describe('The suggested column from the data source.'),
    confidenceScore: z
      .number()
      .describe('A score indicating the confidence of the mapping suggestion.'),
  })
);
export type SuggestPlaceholderMappingsOutput = z.infer<
  typeof SuggestPlaceholderMappingsOutputSchema
>;

export async function suggestPlaceholderMappings(
  input: SuggestPlaceholderMappingsInput
): Promise<SuggestPlaceholderMappingsOutput> {
  return suggestPlaceholderMappingsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestPlaceholderMappingsPrompt',
  input: {schema: SuggestPlaceholderMappingsInputSchema},
  output: {schema: SuggestPlaceholderMappingsOutputSchema},
  prompt: `You are an AI expert in semantic matching. Your task is to suggest the best mappings between placeholders in a document template and columns in a data source.

You will be provided with a list of template placeholders and a list of data source columns. Your goal is to analyze the semantics of each placeholder and column, and suggest the most appropriate mapping based on their meaning and context.

For each placeholder, you should identify the data source column that is most semantically similar and provide a confidence score indicating the strength of the match.

Template Placeholders:
{{#each templatePlaceholders}}- {{{this}}}
{{/each}}

Data Source Columns:
{{#each dataSourceColumns}}- {{{this}}}
{{/each}}

Output the suggestions as a JSON array of objects, where each object contains the placeholder, suggested column, and a confidence score between 0 and 1.
`,
});

const suggestPlaceholderMappingsFlow = ai.defineFlow(
  {
    name: 'suggestPlaceholderMappingsFlow',
    inputSchema: SuggestPlaceholderMappingsInputSchema,
    outputSchema: SuggestPlaceholderMappingsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
